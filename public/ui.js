import {
  getStore,
  buyUpgrade,
  toggleSound,
  isMuted,
  addCoins,
  isUpgradeOwned,
} from "./utils/store.js";

import { showToast } from "./utils/notify.js";
import { playSound } from "./utils/sound.js";

//import { Player } from "./player.js"; // –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —â–æ—Å—å –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
//import { updateCoinsUI } from "./utils/store.js"; // –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —â–æ—Å—å –Ω–∞ –µ–∫—Ä–∞–Ω—ñ

//import { updateScore, updateHighScoreUI } from "./utils/score.js";
//import { sendScore } from "./socket-client.js"; // –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —â–æ—Å—å –Ω–∞ –µ–∫—Ä–∞–Ω—ñ

// üéØ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –º–∞–≥–∞–∑–∏–Ω—É (–º–æ–Ω–µ—Ç–∏ + —Å—Ç–∞—Ç—É—Å –∫–Ω–æ–ø–æ–∫)
export function updateStoreUI() {
  const coinsSpan = document.getElementById("storeCoins");
  if (coinsSpan) {
    coinsSpan.textContent = getStore().coins;
  }

  // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∫—É–ø–ª–µ–Ω—ñ –∞–ø–≥—Ä–µ–π–¥–∏
  const buttons = document.querySelectorAll(".store__btn");
  buttons.forEach((btn) => {
    const upgrade = btn.dataset.upgrade;
    if (isUpgradeOwned(upgrade)) {
      btn.classList.add("store__btn--owned");
      btn.disabled = true;
    }
  });
  // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫–∏ –∑–∞ –∫–ª–∞—Å–æ–º
  // const buttons = document.querySelectorAll(".store__btn");
  // buttons.forEach((btn) => {
  //   const text = btn.textContent.toLowerCase();
  //   if (text.includes("—Ä–∞–∫–µ—Ç–∞") && isUpgradeOwned("rocket")) {
  //     btn.classList.add("store__btn--owned");
  //     btn.disabled = true;
  //   }
  //   if (text.includes("–ª–∞–∑–µ—Ä") && isUpgradeOwned("laser")) {
  //     btn.classList.add("store__btn--owned");
  //     btn.disabled = true;
  //   }
  // });
}

// üéÆ –û–Ω–æ–≤–ª–µ–Ω–Ω—è HUD (–ø–æ—Ç–æ—á–Ω–∞ –∑–±—Ä–æ—è, –æ—á–∫–∏, —Ä–µ–∫–æ—Ä–¥)
export function updateHUD({
  score = 0,
  weapon = "–ó–≤–∏—á–∞–π–Ω–∞",
  highscore = 0,
} = {}) {
  const weaponSpan = document.getElementById("weaponType");
  const scoreSpan = document.getElementById("score");
  const highscoreSpan = document.getElementById("highscore");

  if (weaponSpan) weaponSpan.textContent = weapon;
  if (scoreSpan) scoreSpan.textContent = score;
  if (highscoreSpan) highscoreSpan.textContent = highscore;
}

// ‚õî –ó–∞–∫—Ä–∏—Ç—Ç—è –º–∞–≥–∞–∑–∏–Ω—É ‚úñ
// üõ† –ì–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è HTMX
window.closeStore = function () {
  const store = document.getElementById("store");
  if (store) store.remove(); // –∞–±–æ store.style.display = "none";
};

// üëá –¶–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –ø—ñ—Å–ª—è –∫—É–ø—ñ–≤–ª—ñ
window.buyUpgrade = function (name) {
  buyUpgrade(name);
  showToast(`‚úÖ –ö—É–ø–ª–µ–Ω–æ: ${name}`);

  //  alert(`‚úÖ –ö—É–ø–ª–µ–Ω–æ: ${name}`);
  //  console.log(`‚úÖ –ö—É–ø–ª–µ–Ω–æ: ${name}`);

  updateStoreUI();
};

window.toggleSound = function () {
  toggleSound(); // –æ–Ω–æ–≤–ª—é—î store
  const isMuted = getStore().mute;

  if (!isMuted) playSound("toggle"); // —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ –∑–≤—É–∫ —É–≤—ñ–º–∫–Ω–µ–Ω–æ

  const icon = isMuted ? "üîá" : "üîä";
  showToast(`${icon} –ó–≤—É–∫: ${isMuted ? "–≤–∏–º–∫–Ω–µ–Ω–æ" : "—É–≤—ñ–º–∫–Ω–µ–Ω–æ"}`);
};

if (isMuted()) {
  audioElement.volume = 0;
}

window.buyUpgrade = function (name) {
  buyUpgrade(name);
  showToast(`‚úÖ –ö—É–ø–ª–µ–Ω–æ: ${name}`);
  playSound("buy");
  updateStoreUI();
};

// –î–æ–¥–∞—Ç–∏ –∫–ª–∞—Å –¥–æ –∫–Ω–æ–ø–∫–∏, —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏, —â–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ –∫—É–ø–ª–µ–Ω–æ
// –ó–Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –∑–∞ —Ç–µ–∫—Å—Ç–æ–º
// const btn = document.querySelector(`.store__btn:contains('${name}')`);
// if (btn) {
//   btn.classList.add("store__btn--owned");
//   btn.disabled = true;
// }
